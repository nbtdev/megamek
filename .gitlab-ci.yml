image: docker:latest

services:
  - docker:dind

variables:
  AWS_ECR_URI: 068936280303.dkr.ecr.us-west-2.amazonaws.com/nbt-mm
  AWS_BUCKET: nbt-mm
  NBT_MM_BUILD_NAME: 0.45.5-SNAPSHOT

stages:
  - build
  - deploy_prod
#  - deploy
#  - promote

assemble:
  image: gradle:jdk8
  stage: build
  script:
    - ./gradlew assembleDist
  artifacts:
    paths:
      - megamek/build/distributions/*
      - docker/*

#deploy_client:
#  stage: deploy
#  environment: 
#    name: DEV
#  variables:
#    GIT_STRATEGY: none
#  script: 
#    - apk add --no-cache curl jq python py-pip
#    - pip install awscli
#    - $(aws ecr get-login --no-include-email --region us-west-2)
#    - aws s3 cp megamek/build/distributions/megamek-$NBT_MM_BUILD_NAME.tar.gz s3://$AWS_BUCKET/dev/megamek-nbt-mm.tar.gz
#    - aws s3 cp megamek/build/distributions/megamek-mac-$NBT_MM_BUILD_NAME.tar.bz2 s3://$AWS_BUCKET/dev/megamek-nbt-mm-mac.tar.bz2
#    - aws s3 cp megamek/build/distributions/megamek-windows-$NBT_MM_BUILD_NAME.zip s3://$AWS_BUCKET/dev/megamek-nbt-mm-windows.zip

#promote_client:
#  stage: promote
#  environment: 
#    name: PROD
#  when: manual
#  variables:
#    GIT_STRATEGY: none
#  script: 
#    - apk add --no-cache curl jq python py-pip
#    - pip install awscli
#    - $(aws ecr get-login --no-include-email --region us-west-2)
#    - aws s3 cp megamek/build/distributions/megamek-$NBT_MM_BUILD_NAME.tar.gz s3://$AWS_BUCKET/megamek-nbt-mm.tar.gz
#    - aws s3 cp megamek/build/distributions/megamek-mac-$NBT_MM_BUILD_NAME.tar.bz2 s3://$AWS_BUCKET/megamek-nbt-mm-mac.tar.bz2
#    - aws s3 cp megamek/build/distributions/megamek-windows-$NBT_MM_BUILD_NAME.zip s3://$AWS_BUCKET/megamek-nbt-mm-windows.zip#


deploy_client:
  stage: deploy_prod
  environment: 
    name: PROD
  variables:
    GIT_STRATEGY: none
  script: 
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region us-west-2)
    - aws s3 cp megamek/build/distributions/megamek-$NBT_MM_BUILD_NAME.tar.gz s3://$AWS_BUCKET/megamek-nbt-mm.tar.gz
    - aws s3 cp megamek/build/distributions/megamek-mac-$NBT_MM_BUILD_NAME.tar.bz2 s3://$AWS_BUCKET/megamek-nbt-mm-mac.tar.bz2
    - aws s3 cp megamek/build/distributions/megamek-windows-$NBT_MM_BUILD_NAME.zip s3://$AWS_BUCKET/megamek-nbt-mm-windows.zip
    - aws s3api put-object-acl --bucket nbt-mm --key megamek-nbt-mm-windows.zip --acl public-read
    - aws s3api put-object-acl --bucket nbt-mm --key megamek-nbt-mm-mac.tar.bz2 --acl public-read
    - aws s3api put-object-acl --bucket nbt-mm --key megamek-nbt-mm.tar.gz --acl public-read
    

#deploy_server:
#  stage: deploy
#  environment: 
#    name: DEV
#  variables:
#    GIT_STRATEGY: none
#    NBT_MM_BUILD_NAME: 0.45.5-SNAPSHOT
#  script:
#    - cp megamek/build/distributions/*.tar.gz docker
#    - cd docker
#    - docker build -t $AWS_ECR_URI:DEV --build-arg tarballName=megamek-$NBT_MM_BUILD_NAME .
#    - apk add --no-cache curl jq python py-pip
#    - pip install awscli
#    - $(aws ecr get-login --no-include-email --region us-west-2)
#    - docker push $AWS_ECR_URI:DEV

#promote_server:
#  stage: promote
#  environment: 
#    name: PROD
#  when: manual
#  variables:
#    GIT_STRATEGY: none
#    NBT_MM_BUILD_NAME: 0.45.5-SNAPSHOT
#  script:
#    - cp megamek/build/distributions/*.tar.gz docker
#    - cd docker
#    - docker build -t $AWS_ECR_URI:PROD --build-arg tarballName=megamek-$NBT_MM_BUILD_NAME .
#    - apk add --no-cache curl jq python py-pip
#    - pip install awscli
#    - $(aws ecr get-login --no-include-email --region us-west-2)
#    - docker push $AWS_ECR_URI:PROD


deploy_server:
  stage: deploy_prod
  environment: 
    name: PROD
  variables:
    GIT_STRATEGY: none
    NBT_MM_BUILD_NAME: 0.45.5-SNAPSHOT
  script:
    - cp megamek/build/distributions/*.tar.gz docker
    - cd docker
    - docker build -t $AWS_ECR_URI:PROD --build-arg tarballName=megamek-$NBT_MM_BUILD_NAME .
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region us-west-2)
    - docker push $AWS_ECR_URI:PROD

