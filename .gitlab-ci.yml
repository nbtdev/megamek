image: docker:latest

services:
  - docker:dind

variables:
  AWS_ECR_URI: 068936280303.dkr.ecr.us-west-2.amazonaws.com/nbt-mm
  AWS_BUCKET: nbt-mm
  NBT_MM_BUILD_NAME: 0.45.3-SNAPSHOT

stages:
  - build
  - deploy

assemble:
  image: gradle:jdk8
  stage: build
  script:
    - ./gradlew assembleDist
  artifacts:
    paths:
      - megamek/build/distributions/*
      - docker/*

deploy_client:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script: 
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region us-west-2)
    - aws s3 cp megamek/build/distributions/megamek-$NBT_MM_BUILD_NAME.tar.gz s3://$AWS_BUCKET/dev/megamek-nbt-mm.tar.gz
    - aws s3 cp megamek/build/distributions/megamek-mac-$NBT_MM_BUILD_NAME.tar.bz2 s3://$AWS_BUCKET/dev/megamek-nbt-mm-mac.tar.bz2
    - aws s3 cp megamek/build/distributions/megamek-windows-$NBT_MM_BUILD_NAME.zip s3://$AWS_BUCKET/dev/megamek-nbt-mm-windows.zip


deploy_server:
  stage: deploy
  variables:
    GIT_STRATEGY: none
    NBT_MM_BUILD_NAME: 0.45.3-SNAPSHOT
  script:
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region us-west-2)
    - cd docker
    - docker build -t $AWS_ECR_URI:DEV --build-arg tarballName=megamek-$NBT_MM_BUILD_NAME .
    - docker push $AWS_ECR_URI:DEV

